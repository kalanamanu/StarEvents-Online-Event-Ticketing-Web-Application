@model List<StarEvents.ViewModels.OrganizerEventViewModel>

@{
    ViewBag.Title = "Bookings";
    Layout = "~/Views/Shared/_LayoutOrganizer.cshtml";
}

<style>
    :root {
        --primary: #1259f3;
        --primary-light: #e8efff;
        --primary-dark: #0d47c1;
        --secondary: #1a237e;
        --success: #10b981;
        --warning: #f59e0b;
        --danger: #ef4444;
        --dark: #1f2937;
        --gray: #6b7280;
        --gray-light: #f8fafc;
        --gray-border: #e5e7eb;
        --shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
        --shadow-lg: 0 8px 30px rgba(0, 0, 0, 0.12);
    }

    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body {
        background: #f8fafc;
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        color: var(--dark);
    }

    .organizer-dashboard {
        max-width: 1400px;
        margin: 0 auto;
        padding: 20px;
    }

    /* Header Section */
    .dashboard-header {
        background: white;
        border-radius: 16px;
        padding: 30px;
        box-shadow: var(--shadow);
        border: 1px solid var(--gray-border);
        margin-bottom: 30px;
        position: relative;
        overflow: hidden;
    }

        .dashboard-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
        }

    .dashboard-title {
        font-size: 2rem;
        font-weight: 800;
        color: var(--dark);
        margin-bottom: 8px;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .dashboard-icon {
        color: var(--primary);
    }

    .dashboard-subtitle {
        color: var(--gray);
        font-size: 1.1rem;
        font-weight: 500;
    }

    /* Stats Cards */
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: white;
        border-radius: 16px;
        padding: 25px;
        box-shadow: var(--shadow);
        border: 1px solid var(--gray-border);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .stat-card:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-lg);
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            border-radius: 2px 0 0 2px;
        }

    .stat-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 15px;
    }

    .stat-icon {
        width: 50px;
        height: 50px;
        background: var(--primary-light);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--primary);
        font-size: 1.3rem;
    }

    .stat-value {
        font-size: 2.2rem;
        font-weight: 800;
        color: var(--dark);
        line-height: 1;
        margin-bottom: 5px;
    }

    .stat-label {
        font-size: 0.9rem;
        color: var(--gray);
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .stat-change {
        font-size: 0.8rem;
        font-weight: 600;
        padding: 4px 8px;
        border-radius: 12px;
        display: inline-flex;
        align-items: center;
        gap: 4px;
    }

    .change-positive {
        background: #dcfce7;
        color: #166534;
    }

    .change-negative {
        background: #fee2e2;
        color: #991b1b;
    }

    /* Events Section */
    .events-section {
        background: white;
        border-radius: 16px;
        box-shadow: var(--shadow);
        border: 1px solid var(--gray-border);
        overflow: hidden;
        margin-bottom: 40px;
    }

    .section-header {
        background: var(--gray-light);
        padding: 20px 25px;
        border-bottom: 1px solid var(--gray-border);
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 15px;
    }

    .section-title {
        font-size: 1.3rem;
        font-weight: 700;
        color: var(--dark);
        margin: 0;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .section-icon {
        color: var(--primary);
    }

    .events-count {
        background: var(--primary);
        color: white;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 600;
    }

    .events-table {
        width: 100%;
        border-collapse: collapse;
    }

        .events-table th {
            background: var(--gray-light);
            padding: 15px 20px;
            text-align: left;
            font-weight: 700;
            color: var(--dark);
            border-bottom: 1px solid var(--gray-border);
            font-size: 0.85rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .events-table td {
            padding: 15px 20px;
            border-bottom: 1px solid var(--gray-border);
            color: var(--dark);
        }

        .events-table tr:last-child td {
            border-bottom: none;
        }

        .events-table tr:hover {
            background: var(--gray-light);
        }

    .event-title {
        font-weight: 600;
        color: var(--primary);
    }

    .event-date {
        font-weight: 600;
        color: var(--dark);
    }

    .booking-count {
        background: var(--primary-light);
        color: var(--primary);
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 700;
        font-size: 0.85rem;
        display: inline-flex;
        align-items: center;
        gap: 4px;
    }

    .action-buttons {
        display: flex;
        gap: 8px;
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--primary), var(--secondary));
        color: white;
        border: none;
        border-radius: 8px;
        padding: 8px 16px;
        font-weight: 600;
        font-size: 0.85rem;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 6px;
        text-decoration: none;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(18, 89, 243, 0.3);
            color: white;
            text-decoration: none;
        }

    .btn-secondary {
        background: white;
        color: var(--primary);
        border: 2px solid var(--primary);
        border-radius: 8px;
        padding: 8px 16px;
        font-weight: 600;
        font-size: 0.85rem;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 6px;
        text-decoration: none;
    }

        .btn-secondary:hover {
            background: var(--primary-light);
            transform: translateY(-2px);
            color: var(--primary);
            text-decoration: none;
        }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: var(--gray);
    }

    .empty-icon {
        font-size: 4rem;
        margin-bottom: 20px;
        opacity: 0.5;
    }

    .empty-title {
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 10px;
        color: var(--dark);
    }

    .empty-description {
        font-size: 1rem;
        margin-bottom: 25px;
        max-width: 400px;
        margin-left: auto;
        margin-right: auto;
        line-height: 1.5;
    }

    .btn-create {
        background: linear-gradient(135deg, var(--primary), var(--secondary));
        color: white;
        border: none;
        border-radius: 10px;
        padding: 12px 24px;
        font-weight: 600;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        text-decoration: none;
    }

        .btn-create:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(18, 89, 243, 0.3);
            color: white;
            text-decoration: none;
        }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .organizer-dashboard {
            padding: 15px;
        }

        .dashboard-header {
            padding: 25px 20px;
        }

        .dashboard-title {
            font-size: 1.8rem;
        }

        .stats-grid {
            grid-template-columns: 1fr;
            gap: 15px;
        }

        .section-header {
            flex-direction: column;
            align-items: flex-start;
        }

        .events-table {
            display: block;
            overflow-x: auto;
            white-space: nowrap;
        }

        .action-buttons {
            flex-direction: column;
        }
    }

    @@media (max-width: 480px) {
        .dashboard-title {
            font-size: 1.6rem;
        }

        .stat-card {
            padding: 20px;
        }

        .events-table th,
        .events-table td {
            padding: 12px 15px;
        }
    }
</style>

<div class="organizer-dashboard">
    <!-- Header Section -->
    <div class="dashboard-header">
        <h1 class="dashboard-title">
            <i class="fas fa-chart-line dashboard-icon"></i>
            Bookings Dashboard
        </h1>
        <p class="dashboard-subtitle">Manage and monitor all your event bookings in one place</p>
    </div>

    <!-- Stats Overview -->
    <div class="stats-grid">
        <div class="stat-card">
            <div class="stat-header">
                <div>
                    <div class="stat-value">@Model.Count</div>
                    <div class="stat-label">Total Events</div>
                </div>
                <div class="stat-icon">
                    <i class="fas fa-calendar-alt"></i>
                </div>
            </div>
        </div>

        <div class="stat-card">
            <div class="stat-header">
                <div>
                    <div class="stat-value">@Model.Sum(e => e.BookingCount)</div>
                    <div class="stat-label">Total Bookings</div>
                </div>
                <div class="stat-icon">
                    <i class="fas fa-ticket-alt"></i>
                </div>
            </div>
        </div>

        <div class="stat-card">
            <div class="stat-header">
                <div>
                    <div class="stat-value">@Model.Count(e => e.EventDate >= DateTime.Today)</div>
                    <div class="stat-label">Upcoming Events</div>
                </div>
                <div class="stat-icon">
                    <i class="fas fa-clock"></i>
                </div>
            </div>
        </div>

        <div class="stat-card">
            <div class="stat-header">
                <div>
                    <div class="stat-value">@Model.Count(e => e.EventDate < DateTime.Today)</div>
                    <div class="stat-label">Past Events</div>
                </div>
                <div class="stat-icon">
                    <i class="fas fa-history"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Events Section -->
    <div class="events-section">
        <div class="section-header">
            <h2 class="section-title">
                <i class="fas fa-list section-icon"></i>
                Bookings
                <span class="events-count">@Model.Count Events</span>
            </h2>
        </div>

        @if (!Model.Any())
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-calendar-plus"></i>
                </div>
                <h3 class="empty-title">No Events Created</h3>
                <p class="empty-description">
                    You haven't created any events yet. Start by creating your first event to manage bookings and track attendance.
                </p>
                <a href="@Url.Action("Create", "Events")" class="btn-create">
                    <i class="fas fa-plus"></i>
                    Create Your First Event
                </a>
            </div>
        }
        else
        {
            <div class="table-container">
                <table class="events-table">
                    <thead>
                        <tr>
                            <th>Event</th>
                            <th>Date & Time</th>
                            <th>Venue</th>
                            <th>Bookings</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var evt in Model.OrderByDescending(e => e.EventDate))
                        {
                            var isUpcoming = evt.EventDate >= DateTime.Today;
                            var statusClass = isUpcoming ? "change-positive" : "change-negative";
                            var statusText = isUpcoming ? "Upcoming" : "Completed";
                            var statusIcon = isUpcoming ? "fas fa-clock" : "fas fa-check-circle";

                            <tr>
                                <td>
                                    <div class="event-title">@evt.Title</div>
                                </td>
                                <td>
                                    <div class="event-date">@evt.EventDate.ToString("MMM dd, yyyy")</div>
                                    <div style="font-size: 0.8rem; color: var(--gray);">@evt.EventDate.ToString("h:mm tt")</div>
                                </td>
                                <td>@evt.VenueName</td>
                                <td>
                                    <span class="booking-count">
                                        <i class="fas fa-users"></i>
                                        @evt.BookingCount
                                    </span>
                                </td>
                                <td>
                                    <span class="stat-change @statusClass">
                                        <i class="@statusIcon"></i>
                                        @statusText
                                    </span>
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <a href="@Url.Action("EventBookings", new { eventId = evt.EventId })" class="btn-primary">
                                            <i class="fas fa-eye"></i>
                                            View Bookings
                                        </a>
                                        
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Add smooth animations
        const statCards = document.querySelectorAll('.stat-card');
        const tableRows = document.querySelectorAll('.events-table tbody tr');

        statCards.forEach((card, index) => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';

            setTimeout(() => {
                card.style.transition = 'all 0.5s ease';
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
            }, index * 100);
        });

        tableRows.forEach((row, index) => {
            row.style.opacity = '0';
            row.style.transform = 'translateX(20px)';

            setTimeout(() => {
                row.style.transition = 'all 0.5s ease';
                row.style.opacity = '1';
                row.style.transform = 'translateX(0)';
            }, index * 50 + 300);
        });

        // Add hover effects to table rows
        tableRows.forEach(row => {
            row.addEventListener('mouseenter', function () {
                this.style.backgroundColor = 'var(--gray-light)';
            });

            row.addEventListener('mouseleave', function () {
                this.style.backgroundColor = '';
            });
        });

        // Add loading states to buttons
        document.querySelectorAll('.btn-primary, .btn-secondary, .btn-create').forEach(button => {
            button.addEventListener('click', function (e) {
                const originalText = this.innerHTML;
                this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Loading...';
                this.disabled = true;

                setTimeout(() => {
                    this.innerHTML = originalText;
                    this.disabled = false;
                }, 2000);
            });
        });
    });
</script>