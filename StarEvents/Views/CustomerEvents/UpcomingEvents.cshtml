@model IEnumerable<StarEvents.ViewModels.UpcomingEventViewModel>

@{
    ViewBag.Title = "My Upcoming Events";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var categories = Model.Select(e => e.Category).Distinct().OrderBy(c => c).ToList();
}

<style>
    :root {
        --primary: #1259f3;
        --primary-light: #e8efff;
        --primary-dark: #0d47c1;
        --secondary: #1a237e;
        --success: #10b981;
        --warning: #f59e0b;
        --danger: #ef4444;
        --dark: #1f2937;
        --gray: #6b7280;
        --gray-light: #f8fafc;
        --gray-border: #e5e7eb;
        --shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
        --shadow-lg: 0 8px 30px rgba(0, 0, 0, 0.12);
    }

    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body {
        background: #f8fafc;
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        color: var(--dark);
        line-height: 1.6;
    }

    .upcoming-events-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 20px;
    }

    /* Header */
    .dashboard-header {
        background: white;
        border-radius: 16px;
        padding: 30px;
        box-shadow: var(--shadow);
        border: 1px solid var(--gray-border);
        margin-bottom: 30px;
        position: relative;
        overflow: hidden;
    }

        .dashboard-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
        }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        flex-wrap: wrap;
        gap: 20px;
    }

    .header-info {
        flex: 1;
    }

    .dashboard-title {
        font-size: 2rem;
        font-weight: 800;
        color: var(--dark);
        margin-bottom: 8px;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .dashboard-icon {
        color: var(--primary);
    }

    .dashboard-subtitle {
        color: var(--gray);
        font-size: 1rem;
        font-weight: 500;
    }

    .event-count {
        background: var(--primary);
        color: white;
        padding: 8px 16px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        gap: 6px;
    }

    /* Filters Section */
    .filters-section {
        background: white;
        border-radius: 16px;
        padding: 25px;
        box-shadow: var(--shadow);
        border: 1px solid var(--gray-border);
        margin-bottom: 30px;
    }

    .filters-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        align-items: end;
    }

    .filter-group {
        display: flex;
        flex-direction: column;
        gap: 8px;
    }

    .filter-label {
        font-size: 0.85rem;
        font-weight: 600;
        color: var(--gray);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .filter-input, .filter-select {
        padding: 12px 16px;
        border: 2px solid var(--gray-border);
        border-radius: 8px;
        font-size: 0.9rem;
        background: white;
        transition: all 0.3s ease;
        font-family: inherit;
        width: 100%;
    }

        .filter-input:focus, .filter-select:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(18, 89, 243, 0.1);
        }

    /* Events Grid */
    .events-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
        gap: 25px;
        margin-bottom: 30px;
    }

    .event-card {
        background: white;
        border-radius: 16px;
        box-shadow: var(--shadow);
        border: 1px solid var(--gray-border);
        overflow: hidden;
        transition: all 0.3s ease;
        position: relative;
    }

        .event-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-lg);
        }

    .event-image-container {
        width: 100%;
        height: 380px;
        overflow: hidden;
        position: relative;
        background: var(--gray-light);
    }

    .event-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .event-card:hover .event-image {
        transform: scale(1.05);
    }

    .event-category {
        position: absolute;
        top: 15px;
        left: 15px;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.8rem;
        color: var(--primary);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .event-content {
        padding: 25px;
    }

    .event-title {
        font-size: 1.3rem;
        font-weight: 700;
        color: var(--dark);
        margin-bottom: 15px;
        line-height: 1.3;
    }

    .event-details {
        display: flex;
        flex-direction: column;
        gap: 12px;
        margin-bottom: 20px;
    }

    .event-detail {
        display: flex;
        align-items: flex-start;
        gap: 10px;
    }

    .detail-icon {
        color: var(--primary);
        width: 16px;
        flex-shrink: 0;
        margin-top: 2px;
    }

    .detail-content {
        flex: 1;
    }

    .detail-label {
        font-size: 0.8rem;
        color: var(--gray);
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.3px;
    }

    .detail-value {
        font-size: 0.95rem;
        color: var(--dark);
        font-weight: 500;
    }

    .booking-code {
        background: var(--gray-light);
        padding: 8px 12px;
        border-radius: 8px;
        border: 1px solid var(--gray-border);
        margin-bottom: 20px;
    }

    .code-label {
        font-size: 0.8rem;
        color: var(--gray);
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.3px;
        margin-bottom: 4px;
    }

    .code-value {
        font-size: 1.1rem;
        font-weight: 700;
        color: var(--primary);
        font-family: 'Courier New', monospace;
    }

    .event-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-top: 20px;
        border-top: 1px solid var(--gray-border);
    }

    /* Status Badges */
    .status-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 700;
        font-size: 0.8rem;
        display: inline-flex;
        align-items: center;
        gap: 4px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

    .status-confirmed {
        background: linear-gradient(135deg, #dcfce7, #bbf7d0);
        color: #166534;
        border: 1px solid #bbf7d0;
    }

    .status-pending {
        background: linear-gradient(135deg, #fef3c7, #fde68a);
        color: #92400e;
        border: 1px solid #fde68a;
    }

    .status-cancelled {
        background: linear-gradient(135deg, #fee2e2, #fecaca);
        color: #991b1b;
        border: 1px solid #fecaca;
    }

    /* Buttons */
    .btn {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 10px 20px;
        border-radius: 10px;
        font-weight: 600;
        font-size: 0.9rem;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        border: none;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--primary), var(--secondary));
        color: white;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(18, 89, 243, 0.3);
            color: white;
            text-decoration: none;
        }

    .btn-outline {
        background: white;
        color: var(--primary);
        border: 2px solid var(--primary);
    }

        .btn-outline:hover {
            background: var(--primary-light);
            transform: translateY(-2px);
            color: var(--primary);
            text-decoration: none;
        }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 80px 20px;
        color: var(--gray);
        grid-column: 1 / -1;
    }

    .empty-icon {
        font-size: 4rem;
        margin-bottom: 20px;
        opacity: 0.5;
    }

    .empty-title {
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 10px;
        color: var(--dark);
    }

    .empty-description {
        font-size: 1rem;
        margin-bottom: 30px;
        max-width: 400px;
        margin-left: auto;
        margin-right: auto;
        line-height: 1.5;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .upcoming-events-container {
            padding: 15px;
        }

        .dashboard-header {
            padding: 25px 20px;
        }

        .header-content {
            flex-direction: column;
        }

        .filters-grid {
            grid-template-columns: 1fr;
        }

        .events-grid {
            grid-template-columns: 1fr;
        }

        .event-footer {
            flex-direction: column;
            gap: 15px;
            align-items: stretch;
        }

        .btn {
            width: 100%;
            justify-content: center;
        }
    }

    @@media (max-width: 480px) {
        .dashboard-title {
            font-size: 1.6rem;
        }

        .event-content {
            padding: 20px;
        }
    }
</style>

<div class="upcoming-events-container">
    <!-- Header Section -->
    <div class="dashboard-header">
        <div class="header-content">
            <div class="header-info">
                <h1 class="dashboard-title">
                    <i class="fas fa-calendar-check dashboard-icon"></i>
                    My Upcoming Events
                </h1>
                <div class="dashboard-subtitle">
                    Manage your event bookings and access all your upcoming event details
                </div>
            </div>
            <div class="event-count">
                <i class="fas fa-ticket-alt"></i>
                @Model.Count() Events
            </div>
        </div>
    </div>

    <!-- Filters Section -->
    <div class="filters-section">
        <div class="filters-grid">
            <div class="filter-group">
                <label class="filter-label">Search Events</label>
                <input type="text" id="eventSearch" class="filter-input" placeholder="Event name, category, location, or booking code..." />
            </div>

            <div class="filter-group">
                <label class="filter-label">Filter by Category</label>
                <select id="categoryFilter" class="filter-select">
                    <option value="">All Categories</option>
                    @foreach (var cat in categories)
                    {
                        <option value="@cat">@cat</option>
                    }
                </select>
            </div>

            <div class="filter-group">
                <label class="filter-label">Filter by Date</label>
                <input type="date" id="dateFilter" class="filter-input" placeholder="Select date..." />
            </div>
        </div>
    </div>

    <!-- Events Grid -->
    @if (!Model.Any())
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-calendar-times"></i>
            </div>
            <h3 class="empty-title">No Upcoming Events</h3>
            <p class="empty-description">
                You don't have any upcoming events booked. Start exploring events to book your next experience!
            </p>
            <a href="@Url.Action("Index", "Events")" class="btn btn-primary">
                <i class="fas fa-search"></i>
                Browse Events
            </a>
        </div>
    }
    else
    {
        <div class="events-grid" id="eventsList">
            @foreach (var e in Model)
            {
                <div class="event-card"
                     data-title="@e.Title.ToLower()"
                     data-category="@e.Category.ToLower()"
                     data-location="@e.Location.ToLower()"
                     data-code="@e.BookingCode.ToLower()"
                     data-date="@e.EventDate.ToString("yyyy-MM-dd")">

                    <div class="event-image-container">
                        <img src="@(!string.IsNullOrEmpty(e.ImageUrl) ? Url.Content(e.ImageUrl) : Url.Content("~/Content/event-placeholder.jpg"))"
                             class="event-image"
                             alt="@e.Title" />
                        <div class="event-category">@e.Category</div>
                    </div>

                    <div class="event-content">
                        <h3 class="event-title">@e.Title</h3>

                        <div class="event-details">
                            <div class="event-detail">
                                <i class="fas fa-calendar-day detail-icon"></i>
                                <div class="detail-content">
                                    <div class="detail-label">Event Date</div>
                                    <div class="detail-value">@e.EventDate.ToString("MMM dd, yyyy 'at' h:mm tt")</div>
                                </div>
                            </div>

                            <div class="event-detail">
                                <i class="fas fa-map-marker-alt detail-icon"></i>
                                <div class="detail-content">
                                    <div class="detail-label">Location</div>
                                    <div class="detail-value">@e.Location</div>
                                </div>
                            </div>

                            <div class="event-detail">
                                <i class="fas fa-ticket-alt detail-icon"></i>
                                <div class="detail-content">
                                    <div class="detail-label">Tickets</div>
                                    <div class="detail-value">@e.Quantity ticket@(e.Quantity != 1 ? "s" : "") • LKR @e.TotalAmount.ToString("N0")</div>
                                </div>
                            </div>
                        </div>

                        <div class="booking-code">
                            <div class="code-label">Booking Reference</div>
                            <div class="code-value">@e.BookingCode</div>
                        </div>

                        <div class="event-footer">
                            <span class="status-badge status-confirmed">
                                <i class="fas fa-check-circle"></i>
                                @e.Status
                            </span>
                            <a href="@Url.Action("BookingDetails", "MyBookings", new { id = e.BookingId })" class="btn btn-outline">
                                <i class="fas fa-arrow-right"></i>
                                View Details
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('eventSearch');
            const categoryFilter = document.getElementById('categoryFilter');
            const dateFilter = document.getElementById('dateFilter');
            const eventCards = document.querySelectorAll('.event-card');

            function filterCards() {
                const term = searchInput.value.trim().toLowerCase();
                const category = categoryFilter.value.trim().toLowerCase();
                const dateVal = dateFilter.value.trim();

                eventCards.forEach(card => {
                    const title = card.getAttribute('data-title');
                    const cat = card.getAttribute('data-category');
                    const location = card.getAttribute('data-location');
                    const code = card.getAttribute('data-code');
                    const eventDate = card.getAttribute('data-date');

                    let matchesSearch = !term || title.includes(term) || cat.includes(term) || location.includes(term) || code.includes(term);
                    let matchesCategory = !category || cat === category;
                    let matchesDate = !dateVal || eventDate === dateVal;

                    if (matchesSearch && matchesCategory && matchesDate) {
                        card.style.display = '';
                    } else {
                        card.style.display = 'none';
                    }
                });
            }

            searchInput.addEventListener('input', filterCards);
            categoryFilter.addEventListener('change', filterCards);
            dateFilter.addEventListener('change', filterCards);

            // Add smooth animations
            const cards = document.querySelectorAll('.event-card');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';

                setTimeout(() => {
                    card.style.transition = 'all 0.5s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });
    </script>
}