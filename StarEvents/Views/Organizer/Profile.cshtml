@model StarEvents.Models.OrganizerProfile

@{
    Layout = "~/Views/Shared/_LayoutOrganizer.cshtml";
    ViewBag.Title = "Profile";
}

<style>
    :root {
        --primary: #1259f3;
        --primary-light: #e8efff;
        --primary-dark: #0d47c1;
        --secondary: #1a237e;
        --success: #10b981;
        --warning: #f59e0b;
        --danger: #ef4444;
        --dark: #1f2937;
        --gray: #6b7280;
        --gray-light: #f8fafc;
        --gray-border: #e5e7eb;
        --shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        --shadow-lg: 0 10px 25px rgba(0, 0, 0, 0.1);
    }

    .profile-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    .profile-header {
        margin-bottom: 2rem;
    }

    .profile-title {
        font-weight: 700;
        color: var(--dark);
        margin-bottom: 0.5rem;
        font-size: 2rem;
    }

    .profile-subtitle {
        color: var(--gray);
        font-size: 1.1rem;
    }

    .profile-card {
        background: white;
        border-radius: 20px;
        box-shadow: var(--shadow-lg);
        border: 1px solid var(--gray-border);
        overflow: hidden;
    }

    .profile-hero {
        background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
        padding: 2rem;
        color: white;
        position: relative;
        overflow: hidden;
    }

        .profile-hero::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -10%;
            width: 300px;
            height: 300px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
        }

    .profile-content {
        padding: 2rem;
    }

    .profile-avatar {
        width: 140px;
        height: 140px;
        border-radius: 20px;
        border: 4px solid white;
        box-shadow: var(--shadow-lg);
        object-fit: cover;
        background: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3rem;
        color: var(--primary);
    }

        .profile-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 16px;
        }

    .org-badge {
        background: rgba(255, 255, 255, 0.2);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 500;
        backdrop-filter: blur(10px);
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        margin-top: 1.5rem;
    }

    .info-section {
        background: var(--gray-light);
        border-radius: 16px;
        padding: 1.5rem;
        border: 1px solid var(--gray-border);
    }

    .section-title {
        font-weight: 600;
        color: var(--dark);
        margin-bottom: 1rem;
        font-size: 1.2rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

        .section-title i {
            color: var(--primary);
        }

    .info-item {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        padding: 1rem 0;
        border-bottom: 1px solid var(--gray-border);
    }

        .info-item:last-child {
            border-bottom: none;
            padding-bottom: 0;
        }

        .info-item:first-child {
            padding-top: 0;
        }

    .info-icon {
        width: 40px;
        height: 40px;
        border-radius: 10px;
        background: var(--primary-light);
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--primary);
        flex-shrink: 0;
    }

    .info-content {
        flex: 1;
    }

    .info-label {
        font-weight: 500;
        color: var(--gray);
        font-size: 0.9rem;
        margin-bottom: 0.25rem;
    }

    .info-value {
        color: var(--dark);
        font-weight: 500;
        line-height: 1.4;
    }

    .description-box {
        background: white;
        border: 1px solid var(--gray-border);
        border-radius: 12px;
        padding: 1.5rem;
        margin-top: 1rem;
    }

    .description-text {
        color: var(--dark);
        line-height: 1.6;
        margin: 0;
    }

    .action-buttons {
        display: flex;
        gap: 1rem;
        margin-top: 2rem;
        flex-wrap: wrap;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
    }

    .btn-primary {
        background: var(--primary);
        color: white;
    }

        .btn-primary:hover {
            background: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(18, 89, 243, 0.3);
            color: white;
            text-decoration: none;
        }

    .btn-secondary {
        background: white;
        color: var(--dark);
        border: 2px solid var(--gray-border);
    }

        .btn-secondary:hover {
            background: var(--gray-light);
            transform: translateY(-2px);
            color: var(--dark);
            text-decoration: none;
        }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-top: 2rem;
    }

    .stat-card {
        background: white;
        border: 1px solid var(--gray-border);
        border-radius: 12px;
        padding: 1.5rem;
        text-align: center;
        transition: all 0.3s ease;
    }

        .stat-card:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-lg);
        }

    .stat-value {
        font-size: 2rem;
        font-weight: 700;
        color: var(--primary);
        line-height: 1;
        margin-bottom: 0.5rem;
    }

    .stat-label {
        color: var(--gray);
        font-size: 0.9rem;
        font-weight: 500;
    }

    @@media (max-width: 768px) {
        .profile-hero {
            text-align: center;
            padding: 1.5rem;
        }

        .profile-avatar {
            margin: 0 auto 1rem;
        }

        .info-grid {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .action-buttons {
            flex-direction: column;
        }

        .btn {
            width: 100%;
            justify-content: center;
        }
    }

    .empty-value {
        color: var(--gray);
        font-style: italic;
    }
</style>

<div class="profile-container">
    <!-- Header -->
    <div class="profile-header">
        <h1 class="profile-title">Organization Profile</h1>
        <p class="profile-subtitle">Manage your organization details and preferences</p>
    </div>

    <!-- Main Profile Card -->
    <div class="profile-card">
        <!-- Hero Section -->
        <div class="profile-hero">
            <div class="row align-items-center">
                <div class="col-md-auto">
                    <div class="profile-avatar">
                        @if (!string.IsNullOrEmpty(Model.ProfilePhoto))
                        {
                            <img src="@Model.ProfilePhoto" alt="@Model.OrganizationName" />
                        }
                        else
                        {
                            <i class="fas fa-building"></i>
                        }
                    </div>
                </div>
                <div class="col-md">
                    <h2 style="color: white; margin-bottom: 0.5rem;">@Model.OrganizationName</h2>
                    <p style="color: rgba(255, 255, 255, 0.9); margin-bottom: 1rem; font-size: 1.1rem;">
                        @Model.ContactPerson
                    </p>
                    <span class="org-badge">
                        <i class="fas fa-certificate me-1"></i> Verified Organizer
                    </span>
                </div>
            </div>
        </div>

        <!-- Content Section -->
        <div class="profile-content">
            <!-- Stats Overview -->
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-value">12</div>
                    <div class="stat-label">Total Events</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">1.2K</div>
                    <div class="stat-label">Tickets Sold</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">4.8</div>
                    <div class="stat-label">Avg Rating</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">98%</div>
                    <div class="stat-label">Satisfaction</div>
                </div>
            </div>

            <!-- Information Grid -->
            <div class="info-grid">
                <!-- Contact Information -->
                <div class="info-section">
                    <h3 class="section-title">
                        <i class="fas fa-address-card"></i>
                        Contact Information
                    </h3>

                    <div class="info-item">
                        <div class="info-icon">
                            <i class="fas fa-user"></i>
                        </div>
                        <div class="info-content">
                            <div class="info-label">Contact Person</div>
                            <div class="info-value">@(string.IsNullOrEmpty(Model.ContactPerson) ? "<span class='empty-value'>Not provided</span>" : Model.ContactPerson)</div>
                        </div>
                    </div>

                    <div class="info-item">
                        <div class="info-icon">
                            <i class="fas fa-phone"></i>
                        </div>
                        <div class="info-content">
                            <div class="info-label">Phone Number</div>
                            <div class="info-value">@(string.IsNullOrEmpty(Model.PhoneNumber) ? "<span class='empty-value'>Not provided</span>" : Model.PhoneNumber)</div>
                        </div>
                    </div>

                    <div class="info-item">
                        <div class="info-icon">
                            <i class="fas fa-envelope"></i>
                        </div>
                        <div class="info-content">
                            <div class="info-label">Email Address</div>
                            <div class="info-value">@User.Identity.Name</div>
                        </div>
                    </div>
                </div>

                <!-- Organization Details -->
                <div class="info-section">
                    <h3 class="section-title">
                        <i class="fas fa-building"></i>
                        Organization Details
                    </h3>

                    <div class="info-item">
                        <div class="info-icon">
                            <i class="fas fa-map-marker-alt"></i>
                        </div>
                        <div class="info-content">
                            <div class="info-label">Address</div>
                            <div class="info-value">@(string.IsNullOrEmpty(Model.Address) ? "<span class='empty-value'>Not provided</span>" : Model.Address)</div>
                        </div>
                    </div>

                    <!-- Description Box -->
                    <div>
                        <div class="info-label" style="margin-bottom: 0.5rem;">About Organization</div>
                        <div class="description-box">
                            <p class="description-text">
                                @if (string.IsNullOrEmpty(Model.Description))
                                {
                                    <span class="empty-value">No description provided. Tell people about your organization and the events you host.</span>
                                }
                                else
                                {
                                    @Model.Description
                                }
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="action-buttons">
                <a href="@Url.Action("EditProfile", "Organizer")" class="btn btn-primary">
                    <i class="fas fa-edit"></i>
                    Edit Profile
                </a>
                <a href="@Url.Action("Dashboard", "Organizer")" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i>
                    Back to Dashboard
                </a>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Add animation to profile elements
        const profileElements = document.querySelectorAll('.info-section, .stat-card');

        profileElements.forEach((element, index) => {
            element.style.opacity = '0';
            element.style.transform = 'translateY(20px)';
            element.style.transition = `opacity 0.6s ease ${index * 0.1}s, transform 0.6s ease ${index * 0.1}s`;

            setTimeout(() => {
                element.style.opacity = '1';
                element.style.transform = 'translateY(0)';
            }, 100);
        });

        // Add hover effects to stat cards
        const statCards = document.querySelectorAll('.stat-card');
        statCards.forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-5px)';
            });

            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(-3px)';
            });
        });
    });
</script>