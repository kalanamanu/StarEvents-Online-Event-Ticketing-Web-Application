@model StarEvents.ViewModels.OrganizerDashboardViewModel
@{
    Layout = "~/Views/Shared/_LayoutOrganizer.cshtml";
}

<style>
    :root {
        --primary: #1259f3;
        --primary-light: #e8efff;
        --primary-dark: #0d47c1;
        --secondary: #1a237e;
        --success: #10b981;
        --success-light: #d1fae5;
        --warning: #f59e0b;
        --warning-light: #fef3c7;
        --danger: #ef4444;
        --danger-light: #fee2e2;
        --info: #3b82f6;
        --dark: #1f2937;
        --gray: #6b7280;
        --gray-light: #f3f4f6;
        --border: #e5e7eb;
        --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
        --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }

    .dashboard {
        padding: 0;
    }

    .welcome-section {
        background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
        color: white;
        padding: 2rem;
        border-radius: 16px;
        margin-bottom: 2rem;
        position: relative;
        overflow: hidden;
    }

        .welcome-section::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -10%;
            width: 300px;
            height: 300px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
        }

        .welcome-section h1 {
            font-weight: 700;
            margin-bottom: 0.5rem;
            font-size: 2rem;
        }

        .welcome-section p {
            opacity: 0.9;
            margin-bottom: 0;
            font-size: 1.1rem;
        }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .stat-card {
        background: white;
        border-radius: 16px;
        padding: 1.5rem;
        box-shadow: var(--shadow);
        border: 1px solid var(--border);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-lg);
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
        }

        .stat-card.events::before {
            background: var(--primary);
        }

        .stat-card.tickets::before {
            background: var(--success);
        }

        .stat-card.revenue::before {
            background: var(--warning);
        }

        .stat-card.notifications::before {
            background: var(--danger);
        }

    .stat-icon {
        width: 48px;
        height: 48px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 1rem;
        font-size: 1.25rem;
    }

    .stat-card.events .stat-icon {
        background: var(--primary-light);
        color: var(--primary);
    }

    .stat-card.tickets .stat-icon {
        background: var(--success-light);
        color: var(--success);
    }

    .stat-card.revenue .stat-icon {
        background: var(--warning-light);
        color: var(--warning);
    }

    .stat-card.notifications .stat-icon {
        background: var(--danger-light);
        color: var(--danger);
    }

    .stat-value {
        font-size: 2rem;
        font-weight: 700;
        color: var(--dark);
        line-height: 1;
        margin-bottom: 0.25rem;
    }

    .stat-label {
        color: var(--gray);
        font-weight: 500;
        font-size: 0.9rem;
    }

    .stat-trend {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        font-size: 0.8rem;
        margin-top: 0.5rem;
    }

    .trend-up {
        color: var(--success);
    }

    .trend-down {
        color: var(--danger);
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .content-card {
        background: white;
        border-radius: 16px;
        box-shadow: var(--shadow);
        border: 1px solid var(--border);
        overflow: hidden;
    }

    .card-header {
        background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
        color: white;
        padding: 1.25rem 1.5rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

        .card-header h3 {
            margin: 0;
            font-size: 1.25rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .card-header .view-all {
            color: white;
            opacity: 0.8;
            font-size: 0.9rem;
            text-decoration: none;
            transition: opacity 0.3s ease;
        }

            .card-header .view-all:hover {
                opacity: 1;
            }

    .card-body {
        padding: 1.5rem;
    }

    .event-list, .booking-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .event-item, .booking-item {
        padding: 1rem 0;
        border-bottom: 1px solid var(--border);
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        gap: 1rem;
    }

        .event-item:last-child, .booking-item:last-child {
            border-bottom: none;
            padding-bottom: 0;
        }

    .event-info, .booking-info {
        flex: 1;
    }

    .event-title, .booking-customer {
        font-weight: 600;
        color: var(--dark);
        margin-bottom: 0.25rem;
        display: block;
    }

    .event-meta, .booking-meta {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--gray);
        font-size: 0.875rem;
    }

        .event-meta i, .booking-meta i {
            width: 14px;
            text-align: center;
        }

    .booking-details {
        margin-top: 0.25rem;
        font-size: 0.875rem;
        color: var(--gray);
    }

    .btn-view {
        background: var(--primary-light);
        color: var(--primary);
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        font-size: 0.875rem;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.3s ease;
        white-space: nowrap;
    }

        .btn-view:hover {
            background: var(--primary);
            color: white;
            transform: translateY(-1px);
        }

    .empty-state {
        text-align: center;
        padding: 2rem;
        color: var(--gray);
    }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

    .quick-actions {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-top: 2rem;
    }

    .action-card {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        text-align: center;
        box-shadow: var(--shadow);
        border: 1px solid var(--border);
        transition: all 0.3s ease;
        text-decoration: none;
        color: inherit;
    }

        .action-card:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-lg);
            color: inherit;
            text-decoration: none;
        }

    .action-icon {
        width: 60px;
        height: 60px;
        border-radius: 12px;
        background: var(--primary-light);
        color: var(--primary);
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1rem;
        font-size: 1.5rem;
    }

    .action-card.create .action-icon {
        background: var(--success-light);
        color: var(--success);
    }

    .action-card.manage .action-icon {
        background: var(--warning-light);
        color: var(--warning);
    }

    .action-title {
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--dark);
    }

    .action-desc {
        color: var(--gray);
        font-size: 0.875rem;
    }

    @@media (max-width: 768px) {
        .content-grid {
            grid-template-columns: 1fr;
        }

        .stats-grid {
            grid-template-columns: 1fr;
        }

        .welcome-section h1 {
            font-size: 1.5rem;
        }

        .event-item, .booking-item {
            flex-direction: column;
            gap: 0.75rem;
        }

        .btn-view {
            align-self: flex-start;
        }
    }
</style>

<div class="dashboard">
    <!-- Welcome Section -->
    <div class="welcome-section">
        <h1>Welcome back! 👋</h1>
        <p>Here's what's happening with your events today.</p>
    </div>

    <!-- Stats Overview -->
    <div class="stats-grid">
        <div class="stat-card events">
            <div class="stat-icon">
                <i class="fas fa-calendar-alt"></i>
            </div>
            <div class="stat-value">@Model.TotalEvents</div>
            <div class="stat-label">Total Events</div>
            @*<div class="stat-trend trend-up">
                <i class="fas fa-arrow-up"></i>
                <span>12% from last month</span>
            </div>*@
        </div>

        <!--<div class="stat-card tickets">
            <div class="stat-icon">
                <i class="fas fa-ticket-alt"></i>
            </div>
            <div class="stat-value">@Model.TicketsSold</div>
            <div class="stat-label">Tickets Sold</div>-->
            @*<div class="stat-trend trend-up">
                <i class="fas fa-arrow-up"></i>
                <span>8% from last week</span>
            </div>*@
        <!--</div>-->

        <div class="stat-card revenue">
            <div class="stat-icon">
                <i class="fas fa-rupee-sign"></i>
            </div>
            <div class="stat-value">Rs. @Model.Revenue.ToString("N2")</div>
            <div class="stat-label">Total Revenue</div>
            @*<div class="stat-trend trend-up">
                <i class="fas fa-arrow-up"></i>
                <span>15% from last month</span>
            </div>*@
        </div>

        <div class="stat-card notifications">
            <div class="stat-icon">
                <i class="fas fa-bell"></i>
            </div>
            <div class="stat-value">@Model.UnreadNotifications</div>
            <div class="stat-label">Unread Notifications</div>
            @*<div class="stat-trend trend-down">
                <i class="fas fa-arrow-down"></i>
                <span>3 since yesterday</span>
            </div>*@
        </div>
    </div>

    <!-- Main Content Grid -->
    <div class="content-grid">
        <!-- Upcoming Events -->
        <div class="content-card">
            <div class="card-header">
                <h3><i class="fas fa-calendar-alt"></i> Upcoming Events</h3>
                <a href="@Url.Action("MyEvents", "Organizer")" class="view-all">View All</a>
            </div>
            <div class="card-body">
                @if (Model.UpcomingEvents != null && Model.UpcomingEvents.Any())
                {
                    <ul class="event-list">
                        @foreach (var evt in Model.UpcomingEvents)
                        {
                            <li class="event-item">
                                <div class="event-info">
                                    <span class="event-title">@evt.Title</span>
                                    <div class="event-meta">
                                        <i class="fas fa-clock"></i>
                                        <span>@(evt.EventDate.HasValue ? evt.EventDate.Value.ToString("MMM dd, yyyy h:mm tt") : "TBD")</span>
                                    </div>
                                </div>
                                <a href="@Url.Action("EventDetails", "Organizer", new { id = evt.Id })" class="btn-view">
                                    View
                                </a>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <div class="empty-state">
                        <i class="fas fa-calendar-times"></i>
                        <p>No upcoming events scheduled</p>
                        <a href="@Url.Action("CreateEvent", "Organizer")" class="btn-view mt-2">Create Your First Event</a>
                    </div>
                }
            </div>
        </div>

        <!-- Recent Bookings -->
        <div class="content-card">
            <div class="card-header">
                <h3><i class="fas fa-ticket-alt"></i> Recent Bookings</h3>
                <a href="@Url.Action("Bookings", "OrganizerBookings")" class="view-all">View All</a>
            </div>
            <div class="card-body">
                @if (Model.RecentBookings != null && Model.RecentBookings.Any())
                {
                    <ul class="booking-list">
                        @foreach (var booking in Model.RecentBookings)
                        {
                            <li class="booking-item">
                                <div class="booking-info">
                                    <span class="booking-customer">@booking.CustomerName</span>
                                    <div class="booking-details">
                                        Booked <strong>@booking.Quantity</strong> tickets for <strong>@booking.EventTitle</strong>
                                    </div>
                                    <div class="booking-meta">
                                        <i class="fas fa-clock"></i>
                                        <span>@(booking.BookedAt.HasValue ? booking.BookedAt.Value.ToString("MMM dd, yyyy h:mm tt") : "TBD")</span>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <div class="empty-state">
                        <i class="fas fa-ticket-alt"></i>
                        <p>No recent bookings</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="quick-actions">
        <a href="@Url.Action("CreateEvent", "Organizer")" class="action-card create">
            <div class="action-icon">
                <i class="fas fa-plus"></i>
            </div>
            <div class="action-title">Create Event</div>
            <div class="action-desc">Set up a new event and start selling tickets</div>
        </a>

        <a href="@Url.Action("MyEvents", "Organizer")" class="action-card manage">
            <div class="action-icon">
                <i class="fas fa-edit"></i>
            </div>
            <div class="action-title">Manage Events</div>
            <div class="action-desc">View and edit your existing events</div>
        </a>

        <a href="@Url.Action("Reports", "Organizer")" class="action-card">
            <div class="action-icon">
                <i class="fas fa-chart-bar"></i>
            </div>
            <div class="action-title">View Reports</div>
            <div class="action-desc">Analyze your event performance</div>
        </a>

        <a href="@Url.Action("Promotions", "Organizer")" class="action-card">
            <div class="action-icon">
                <i class="fas fa-percent"></i>
            </div>
            <div class="action-title">Promotions</div>
            <div class="action-desc">Create discounts and special offers</div>
        </a>
    </div>
</div>

<script>
    // Add some interactive animations
    document.addEventListener('DOMContentLoaded', function() {
        // Animate stat cards on scroll
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver(function(entries) {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, observerOptions);

        // Observe all stat cards
        document.querySelectorAll('.stat-card').forEach(card => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
            observer.observe(card);
        });

        // Add hover effects to action cards
        document.querySelectorAll('.action-card').forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-5px) scale(1.02)';
            });

            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0) scale(1)';
            });
        });
    });
</script>