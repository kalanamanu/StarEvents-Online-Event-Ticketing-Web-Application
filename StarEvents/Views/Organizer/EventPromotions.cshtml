@model IEnumerable<StarEvents.ViewModels.PromotionWithSeatPriceViewModel>
@{
    ViewBag.Title = "Event Promotions";
    Layout = "~/Views/Shared/_LayoutOrganizer.cshtml";
    int eventId = ViewBag.EventId;
}

<style>
    :root {
        --primary: #1259f3;
        --primary-light: #e8efff;
        --primary-dark: #0d47c1;
        --secondary: #1a237e;
        --success: #10b981;
        --warning: #f59e0b;
        --danger: #ef4444;
        --dark: #1a1d28;
        --gray: #64748b;
        --gray-light: #f8fafc;
        --gray-border: #e2e8f0;
        --border-radius: 8px;
        --shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        --shadow-lg: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .promotions-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 2rem;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 2rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .page-title-section {
        flex: 1;
    }

    .page-title {
        font-size: 2rem;
        font-weight: 700;
        color: var(--dark);
        margin-bottom: 0.5rem;
    }

    .page-subtitle {
        color: var(--gray);
        font-size: 1.1rem;
        margin-bottom: 0;
    }

    .header-actions {
        display: flex;
        gap: 1rem;
        align-items: center;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: var(--border-radius);
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        font-size: 0.95rem;
    }

    .btn-primary {
        background: var(--primary);
        color: white;
    }

        .btn-primary:hover {
            background: var(--primary-dark);
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(18, 89, 243, 0.2);
        }

    .btn-secondary {
        background: white;
        color: var(--dark);
        border: 2px solid var(--gray-border);
    }

        .btn-secondary:hover {
            background: var(--gray-light);
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

    /* Seat Categories Card */
    .seat-categories-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        border: 1px solid var(--gray-border);
        margin-bottom: 2rem;
        overflow: hidden;
    }

    .card-header {
        background: var(--gray-light);
        padding: 1.25rem 1.5rem;
        border-bottom: 1px solid var(--gray-border);
    }

    .card-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--dark);
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .card-body {
        padding: 1.5rem;
    }

    .seat-categories-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
    }

    .seat-category-item {
        background: white;
        border: 1px solid var(--gray-border);
        border-radius: var(--border-radius);
        padding: 1rem;
        text-align: center;
    }

    .seat-category-name {
        font-weight: 600;
        color: var(--dark);
        margin-bottom: 0.5rem;
    }

    .seat-category-price {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--primary);
        margin-bottom: 0.25rem;
    }

    .seat-category-meta {
        font-size: 0.875rem;
        color: var(--gray);
    }

    /* Promotions Table */
    .promotions-table-container {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        border: 1px solid var(--gray-border);
        overflow: hidden;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        margin: 0;
    }

        .table th {
            background: var(--gray-light);
            padding: 1rem;
            text-align: left;
            font-weight: 600;
            color: var(--dark);
            border-bottom: 2px solid var(--gray-border);
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .table td {
            padding: 1rem;
            border-bottom: 1px solid var(--gray-border);
            color: var(--dark);
            vertical-align: top;
        }

        .table tbody tr:hover {
            background: var(--primary-light);
        }

        .table tbody tr:last-child td {
            border-bottom: none;
        }

    /* Status Badges */
    .badge {
        padding: 0.375rem 0.75rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .badge-success {
        background: var(--success);
        color: white;
    }

    .badge-secondary {
        background: var(--gray);
        color: white;
    }

    /* Price Styling */
    .price-original {
        color: var(--gray);
        text-decoration: line-through;
        font-size: 0.875rem;
    }

    .price-discounted {
        font-weight: 600;
        color: var(--success);
        font-size: 1rem;
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }

    .btn-sm {
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
        border-radius: 6px;
    }

    .btn-warning {
        background: var(--warning);
        color: white;
    }

        .btn-warning:hover {
            background: #e69507;
            transform: translateY(-1px);
        }

    .btn-danger {
        background: var(--danger);
        color: white;
    }

        .btn-danger:hover {
            background: #dc2626;
            transform: translateY(-1px);
        }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 3rem 2rem;
        color: var(--gray);
    }

    .empty-state-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
        opacity: 0.5;
    }

    .empty-state-title {
        font-size: 1.25rem;
        margin-bottom: 0.5rem;
        color: var(--dark);
    }

    .empty-state-text {
        margin-bottom: 1.5rem;
    }

    /* Responsive Design */
    @@media (max-width: 1200px) {
        .table-container {
            overflow-x: auto;
        }

        .table {
            min-width: 1000px;
        }
    }

    @@media (max-width: 768px) {
        .promotions-container {
            padding: 1rem;
        }

        .page-header {
            flex-direction: column;
            align-items: stretch;
        }

        .header-actions {
            justify-content: space-between;
        }

        .seat-categories-grid {
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        }

        .action-buttons {
            flex-direction: column;
        }

        .btn-sm {
            width: 100%;
            justify-content: center;
        }
    }

    /* Promotion Card View */
    .promotions-grid {
        display: none;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .promotion-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        border: 1px solid var(--gray-border);
        overflow: hidden;
        transition: all 0.3s ease;
    }

        .promotion-card:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

    .promotion-header {
        background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
        color: white;
        padding: 1.5rem;
    }

    .promotion-title {
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .promotion-type {
        opacity: 0.9;
        font-size: 0.875rem;
    }

    .promotion-body {
        padding: 1.5rem;
    }

    .promotion-details {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .detail-item {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .detail-label {
        font-size: 0.75rem;
        font-weight: 600;
        color: var(--gray);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .detail-value {
        font-weight: 500;
        color: var(--dark);
    }

    .promotion-footer {
        padding: 1rem 1.5rem;
        background: var(--gray-light);
        border-top: 1px solid var(--gray-border);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .view-toggle {
        display: flex;
        gap: 0.5rem;
        margin-bottom: 1rem;
        justify-content: flex-end;
    }

    .toggle-btn {
        background: white;
        border: 1px solid var(--gray-border);
        padding: 0.5rem 1rem;
        border-radius: var(--border-radius);
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .toggle-btn.active {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
        }
</style>

<div class="promotions-container">
    <!-- Page Header -->
    <div class="page-header">
        <div class="page-title-section">
            <h1 class="page-title">Event Promotions</h1>
            <p class="page-subtitle">Manage discounts and special offers for your event</p>
        </div>
        <div class="header-actions">
            <a href="@Url.Action("EventDetails", "Organizer", new { id = eventId })" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i>
                Back to Event
            </a>
            <a href="@Url.Action("CreateEventPromotion", "Organizer", new { eventId = eventId })" class="btn btn-primary">
                <i class="fas fa-plus"></i>
                Add Promotion
            </a>
        </div>
    </div>

    <!-- Seat Categories Overview -->
    @if (ViewBag.SeatCategories != null)
    {
        <div class="seat-categories-card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-chair"></i>
                    Seat Categories & Pricing
                </h3>
            </div>
            <div class="card-body">
                <div class="seat-categories-grid">
                    @foreach (var seat in ViewBag.SeatCategories)
                    {
                        <div class="seat-category-item">
                            <div class="seat-category-name">@seat.CategoryName</div>
                            <div class="seat-category-price">Rs. @String.Format("{0:N2}", seat.Price)</div>
                            <div class="seat-category-meta">
                                @seat.AvailableSeats of @seat.TotalSeats available
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

    <!-- View Toggle -->
    <div class="view-toggle">
        <button class="toggle-btn active" data-view="table">
            <i class="fas fa-table"></i> Table View
        </button>
        <button class="toggle-btn" data-view="grid">
            <i class="fas fa-th-large"></i> Card View
        </button>
    </div>

    <!-- Promotions Table View -->
    <div class="promotions-table-container" id="tableView">
        @if (Model.Any())
        {
            <div class="table-container">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Promotion Name</th>
                            <th>Type</th>
                            <th>Discount</th>
                            <th>Seat Category</th>
                            <th>Validity</th>
                            <th>Usage</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var promoVm in Model)
                        {
                            var promo = promoVm.Discount;
                            <tr id="promo-row-@promo.DiscountId">
                                <td>
                                    <div class="fw-bold">@promo.DiscountName</div>
                                    <small class="text-muted">@promo.Description</small>
                                </td>
                                <td>@promo.DiscountType</td>
                                <td>
                                    @if (promo.DiscountPercent.HasValue)
                                    {
                                        <span class="badge bg-primary">@promo.DiscountPercent.Value.ToString("0.##")%</span>
                                    }
                                    else if (promo.DiscountAmount.HasValue)
                                    {
                                        <span class="badge bg-info">Rs. @promo.DiscountAmount.Value.ToString("0.##")</span>
                                    }
                                </td>
                                <td>@promo.SeatCategory</td>
                                <td>
                                    <div>@promo.StartDate.ToString("MMM dd")</div>
                                    <div class="text-muted small">to @promo.EndDate.ToString("MMM dd, yyyy")</div>
                                </td>
                                <td>
                                    <div class="small">Max: @(promo.MaxUsage?.ToString() ?? "∞")</div>
                                </td>
                                <td>
                                    @if (promo.IsActive)
                                    {
                                        <span class="badge badge-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-secondary">Inactive</span>
                                    }
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <a href="@Url.Action("EditEventPromotion", "Organizer", new { id = promo.DiscountId })"
                                           class="btn btn-warning btn-sm"
                                           title="Edit Promotion">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button type="button"
                                                class="btn btn-danger btn-sm"
                                                title="Delete Promotion"
                                                onclick="deletePromotion(@promo.DiscountId, @eventId)">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-state-icon">
                    <i class="fas fa-percent"></i>
                </div>
                <h3 class="empty-state-title">No Promotions Created</h3>
                <p class="empty-state-text">Get started by creating your first promotion to attract more customers.</p>
                <a href="@Url.Action("CreateEventPromotion", "Organizer", new { eventId = eventId })" class="btn btn-primary">
                    <i class="fas fa-plus"></i>
                    Create First Promotion
                </a>
            </div>
        }
    </div>

    <!-- Promotions Grid View -->
    <div class="promotions-grid" id="gridView">
        @foreach (var promoVm in Model)
        {
            var promo = promoVm.Discount;
            <div class="promotion-card" id="promo-card-@promo.DiscountId">
                <div class="promotion-header">
                    <h3 class="promotion-title">@promo.DiscountName</h3>
                    <div class="promotion-type">@promo.DiscountType</div>
                </div>
                <div class="promotion-body">
                    <p class="text-muted mb-3">@promo.Description</p>
                    <div class="promotion-details">
                        <div class="detail-item">
                            <span class="detail-label">Discount</span>
                            <span class="detail-value">
                                @if (promo.DiscountPercent.HasValue)
                                {
                                    <text>@promo.DiscountPercent.Value.ToString("0.##")% OFF</text>
                                }
                                else if (promo.DiscountAmount.HasValue)
                                {
                                    <text>Rs. @promo.DiscountAmount.Value.ToString("0.##") OFF</text>
                                }
                            </span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">Seat Category</span>
                            <span class="detail-value">@promo.SeatCategory</span>
                        </div>
                        
                        <div class="detail-item">
                            <span class="detail-label">Max Usage</span>
                            <span class="detail-value">@(promo.MaxUsage?.ToString() ?? "Unlimited")</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">Validity</span>
                            <span class="detail-value">@promo.StartDate.ToString("MMM dd") - @promo.EndDate.ToString("MMM dd")</span>
                        </div>
                    </div>
                </div>
                <div class="promotion-footer">
                    <div>
                        @if (promo.IsActive)
                        {
                            <span class="badge badge-success">Active</span>
                        }
                        else
                        {
                            <span class="badge badge-secondary">Inactive</span>
                        }
                    </div>
                    <div class="action-buttons">
                        <a href="@Url.Action("EditEventPromotion", "Organizer", new { id = promo.DiscountId })"
                           class="btn btn-warning btn-sm">
                            <i class="fas fa-edit"></i>
                        </a>
                        <button type="button"
                                class="btn btn-danger btn-sm"
                                title="Delete Promotion"
                                onclick="deletePromotion(@promo.DiscountId, @eventId, true)">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    // Helper to get AntiForgery token value
    function getAntiForgeryToken() {
        return document.querySelector('input[name="__RequestVerificationToken"]').value;
    }

    // Delete Promotion AJAX function
    function deletePromotion(discountId, eventId, isCardView = false) {
        if (!confirm('Are you sure you want to delete this promotion?')) return;

        let rowSelector = isCardView ? `#promo-card-${discountId}` : `#promo-row-${discountId}`;
        let row = document.querySelector(rowSelector);
        if (row) row.style.opacity = "0.5";

        fetch('/Organizer/DeleteEventPromotion', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': getAntiForgeryToken()
            },
            body: 'id=' + discountId
        })
        .then(resp => {
            if (resp.ok) {
                if (row) row.remove();
            } else {
                alert('Delete failed!');
                if (row) row.style.opacity = "1";
            }
        })
        .catch(() => {
            alert('Delete failed!');
            if (row) row.style.opacity = "1";
        });
    }

    document.addEventListener('DOMContentLoaded', function() {
        // View toggle functionality
        const toggleButtons = document.querySelectorAll('.toggle-btn');
        const tableView = document.getElementById('tableView');
        const gridView = document.getElementById('gridView');

        toggleButtons.forEach(button => {
            button.addEventListener('click', function() {
                const view = this.dataset.view;
                toggleButtons.forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
                if (view === 'table') {
                    tableView.style.display = 'block';
                    gridView.style.display = 'none';
                } else {
                    tableView.style.display = 'none';
                    gridView.style.display = 'grid';
                }
            });
        });

        if (!@Model.Any()) {
            gridView.style.display = 'none';
        }
    });
</script>